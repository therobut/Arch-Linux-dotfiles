// Generated by CoffeeScript 1.6.3
(function() {
  var Buffer, root;

  Buffer = (function() {
    var bufferGotoMode, closeMatchMode, keepMatchMode, _ref;

    function Buffer() {}

    _ref = [], bufferGotoMode = _ref[0], closeMatchMode = _ref[1], keepMatchMode = _ref[2];

    Buffer.reset = function() {
      var _ref1;
      return _ref1 = [], bufferGotoMode = _ref1[0], closeMatchMode = _ref1[1], keepMatchMode = _ref1[2], _ref1;
    };

    Buffer.gotoFirstMatchHandle = function(keyword) {
      if (keyword == null) {
        keyword = null;
      }
      if (!((keyword != null) || bufferGotoMode)) {
        return;
      }
      Post({
        action: "Buffer.gotoFirstMatch",
        keyword: (keyword != null ? keyword : CmdBox.get().content).trim()
      });
      bufferGotoMode = false;
      return CmdBox.remove();
    };

    Buffer.gotoFirstMatch = function() {
      var count;
      if (count = times(true)) {
        return Post({
          action: "Tab.select",
          index: count - 1
        });
      } else {
        bufferGotoMode = true;
        return CmdBox.set({
          title: "Goto Buffer",
          content: ""
        });
      }
    };

    desc(Buffer.gotoFirstMatch, "Go to {count} tab or the first matched tab where title / url matches string");

    Buffer.deleteMatchHandle = function(keyword) {
      if (keyword == null) {
        keyword = null;
      }
      if (!((keyword != null) || closeMatchMode)) {
        return;
      }
      Post({
        action: "Buffer.deleteMatch",
        keyword: (keyword != null ? keyword : CmdBox.get().content).trim()
      });
      closeMatchMode = false;
      return CmdBox.remove();
    };

    desc(Buffer.deleteMatchHandle, "Close all matched tabs. like `B` in normal mode");

    Buffer.deleteMatch = function() {
      var count;
      if (count = times(true)) {
        return Post({
          action: "Tab.close",
          index: count - 1
        });
      } else {
        closeMatchMode = true;
        return CmdBox.set({
          title: "Delete Matched Buffer",
          content: ""
        });
      }
    };

    desc(Buffer.deleteMatch, "Same as `b`, But close matched tabs");

    Buffer.deleteNoteMatchHandle = function(keyword) {
      if (keyword == null) {
        keyword = null;
      }
      if (!((keyword != null) || keepMatchMode)) {
        return;
      }
      Post({
        action: "Buffer.deleteNotMatch",
        keyword: (keyword != null ? keyword : CmdBox.get().content).trim()
      });
      keepMatchMode = false;
      return CmdBox.remove();
    };

    desc(Buffer.deleteNoteMatchHandle, "Keep all matched tabs, close others. like `<M-b>` in normal mode");

    Buffer.deleteNotMatch = function() {
      CmdBox.set({
        title: "Keep Matched Buffer",
        content: ""
      });
      return keepMatchMode = true;
    };

    desc(Buffer.deleteNotMatch, "Like `B`, But keep matched tabs, close others");

    return Buffer;

  })();

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.Buffer = Buffer;

}).call(this);
