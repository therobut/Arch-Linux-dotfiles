// Generated by CoffeeScript 1.6.3
(function() {
  var CmdBox, root;

  CmdBox = (function() {
    var box_id, cmdBoxInput, cmdBoxTitle, input_box_id,
      _this = this;

    function CmdBox() {}

    box_id = "_vrome_cmd_box";

    input_box_id = "_vrome_cmd_input_box";

    cmdBoxTitle = function(force_create) {
      var elems;
      if (force_create == null) {
        force_create = false;
      }
      elems = $("#_vrome_cmd_box span");
      if (force_create && elems.length === 0) {
        elems.remove();
        CmdBox.cmdBox().append($("<span>"));
      }
      return $("#_vrome_cmd_box span");
    };

    cmdBoxInput = function(force_create) {
      var elems;
      if (force_create == null) {
        force_create = false;
      }
      elems = $("#_vrome_cmd_box input");
      if (force_create && elems.length === 0) {
        elems.remove();
        CmdBox.cmdBox().append($("<input>", {
          id: input_box_id
        }));
      }
      return $("#_vrome_cmd_box input");
    };

    CmdBox.isActive = function() {
      return document.activeElement && (document.activeElement.id === input_box_id);
    };

    CmdBox.cmdBox = function() {
      if ($("#" + box_id).length === 0) {
        $("body").prepend($("<div>", {
          id: box_id
        }));
      }
      return $("#" + box_id).attr("rand_id", Math.random().toString());
    };

    CmdBox.set = function(o, force) {
      var input, length, start, _ref;
      if (force == null) {
        force = true;
      }
      if (typeof o.title === "string") {
        cmdBoxTitle(force).unbind().html(o.title).mousedown(o.mouseOverTitle);
      }
      if (typeof o.content === "string") {
        input = cmdBoxInput(force).val(o.content);
        if (force) {
          input.unbind().keydown(o.pressDown).keyup(o.pressUp).keypress(o.pressPress).select();
        }
        if (typeof o.selection === "string") {
          _ref = [input.val().indexOf(o.selection), o.selection.length], start = _ref[0], length = _ref[1];
          input.prop({
            selectionStart: start,
            selectionEnd: start + length
          });
        } else if (o.select_last) {
          input.prop({
            selectionStart: input.val().length
          });
        }
      }
      if (o.timeout) {
        return setTimeout(CmdBox.remove, Number(o.timeout), CmdBox.cmdBox().attr("rand_id"));
      }
    };

    CmdBox.softSet = function(o) {
      return CmdBox.set(o, false);
    };

    CmdBox.get = function() {
      var argument, end, input, start, value, _content, _ref;
      input = cmdBoxInput();
      _ref = [input.val() || "", input.prop("selectionStart"), input.prop("selectionEnd")], value = _ref[0], start = _ref[1], end = _ref[2];
      _content = "" + value.slice(0, start) + value.slice(end);
      argument = value.split(" ").slice(1).join(" ");
      return {
        title: cmdBoxTitle().html() || "",
        content: value,
        selection: value.slice(start, +end + 1 || 9e9),
        _content: _content,
        argument: argument
      };
    };

    CmdBox.remove = function(rand_id) {
      if (rand_id == null) {
        rand_id = null;
      }
      return (rand_id ? $("#" + box_id).filter("[rand_id='" + rand_id + "']") : $("#" + box_id)).unbind().remove();
    };

    CmdBox.blur = function() {
      var _ref;
      return (_ref = cmdBoxInput()) != null ? _ref.blur() : void 0;
    };

    return CmdBox;

  }).call(this);

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.CmdBox = CmdBox;

}).call(this);
