// Generated by CoffeeScript 1.6.3
(function() {
  var Command, root;

  Command = (function() {
    var toggleHiddenElems;

    function Command() {}

    Command.reloadExtension = function() {
      return Post({
        action: "reloadExtension"
      });
    };

    desc(Command.reloadExtension, "Reload All Extensions");

    Command.print = function() {
      CmdBox.remove();
      return setTimeout(window.print, 500);
    };

    desc(Command.print, "Print the current page you see");

    toggleHiddenElems = function(all, elems) {
      if (all.length > 1) {
        return all.removeAttr("__vrome_hidden");
      } else {
        return elems.attr("__vrome_hidden", "1");
      }
    };

    Command.imagesToggle = function() {
      return toggleHiddenElems($("img[__vrome_hidden]"), $("img"));
    };

    desc(Command.imagesToggle, "Toggle images");

    Command.imagesOnly = function() {
      var div, images;
      div = $("[__vrome_images]");
      if (div.length > 0) {
        return toggleHiddenElems($("body").children(), div.remove());
      } else {
        images = $('img').filter(':visible').clone();
        toggleHiddenElems([], $("body").children());
        return $("body").append($("<div>", {
          __vrome_images: "1"
        }).append(images));
      }
    };

    desc(Command.imagesOnly, "Only show images, run again to rollback");

    Command.javascript = function() {
      return console.log(eval(CmdBox.get().argument));
    };

    desc(Command.javascript, "Run javascript (jQuery)");

    Command.source = function() {
      return Post({
        action: "Command.source",
        sources: CmdBox.get().argument
      });
    };

    desc(Command.source, "Source javascript/style files");

    Command.css = function() {
      var div;
      div = $("style[__vrome_style]");
      if (div.length === 0) {
        $("body").append(div = $("<style>", {
          "__vrome_style": 1
        }));
      }
      return div.text(div.text() + "\n" + CmdBox.get().argument);
    };

    desc(Command.css, "Add css styles");

    return Command;

  })();

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.Command = Command;

}).call(this);
