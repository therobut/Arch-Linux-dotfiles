// Generated by CoffeeScript 1.6.3
(function() {
  $.fn.reverse = [].reverse;

  String.prototype.startsWith = function(str) {
    return !!this.match("^" + ((str != null ? str.escapeRegExp() : void 0) || ""));
  };

  String.prototype.endsWith = function(str) {
    return !!this.match(((str != null ? str.escapeRegExp() : void 0) || "") + "$");
  };

  String.prototype.escapeRegExp = function() {
    return this.replace(/([-.*+?^${}()|[\]\/\\])/g, "\\$1");
  };

  String.prototype.reverse = function() {
    return this.split("").reverse().join("");
  };

  String.prototype.isUpperCase = function() {
    return this === this.toUpperCase();
  };

  String.prototype.isLowerCase = function() {
    return this === this.toLowerCase();
  };

  String.prototype.formatLineBreaks = function() {
    return this.replace(/\n/g, "<br/>");
  };

  String.prototype.isValidURL = function() {
    return this.match(/https?|ftp|file:\/\//);
  };

  String.prototype.transformURL = function() {
    var exp;
    exp = /(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/g;
    return this.replace(exp, "<a href='$1'>$1</a>");
  };

  String.prototype.trim = function() {
    return this.replace(/^[\s\xA0]+/, "").replace(/[\s\xA0]+$/, "");
  };

  String.prototype.trimFirst = function(str) {
    var result, s, _i, _len;
    if (typeof str === "string") {
      return this.trimFirstStr(str).trim();
    } else {
      result = this;
      for (_i = 0, _len = str.length; _i < _len; _i++) {
        s = str[_i];
        result = result.trimFirstStr(s).trim();
      }
      return result;
    }
  };

  String.prototype.trimFirstStr = function(str) {
    if (typeof str === "string") {
      return this.replace(new RegExp("^" + (str.escapeRegExp())), "");
    }
  };

  String.prototype.reverse = function() {
    return this.split("").reverse().join("");
  };

  String.prototype.isUpperCase = function() {
    return this === this.toUpperCase();
  };

  String.prototype.isLowerCase = function() {
    return this === this.toLowerCase();
  };

  String.prototype.firstLetterUpper = function() {
    return this.charAt(0).toUpperCase() + this.substring(1);
  };

  String.prototype.escape = function() {
    return $("<div>").text(this).html();
  };

  String.prototype.formatLong = function(max, className) {
    var a, result;
    result = this.substring(0, max).escape;
    if (this.length > max) {
      a = $("<a class='" + className + "'>");
      a.attr("href", "javascript:void(0);");
      a.attr("onclick", "var tmp = this.title;this.title = this.innerHTML;this.innerHTML = tmp;");
      a.attr("title", this);
      a.html("&nbsp;...[more]");
      result += a.outerHTML;
    }
    return result;
  };

}).call(this);
