// Generated by CoffeeScript 1.6.3
(function() {
  var Window, root;

  Window = (function() {
    function Window() {}

    Window.create = function() {
      return chrome.windows.create();
    };

    Window.close = function() {
      var tab;
      tab = getTab(arguments);
      return chrome.windows.remove(tab.windowId);
    };

    Window.closeAll = function() {
      return chrome.windows.getAll(function(windows) {
        var window, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = windows.length; _i < _len; _i++) {
          window = windows[_i];
          _results.push(chrome.windows.remove(window.id));
        }
        return _results;
      });
    };

    Window.capture = function() {
      var tab;
      tab = getTab(arguments);
      return chrome.tabs.captureVisibleTab(tab.windowId, {
        format: 'png'
      }, function(dataUrl) {
        return Post(tab, {
          action: "Window.capture",
          url: dataUrl
        });
      });
    };

    Window.save_page = function(msg) {
      var tab;
      tab = getTab(arguments);
      return chrome.pageCapture.saveAsMHTML({
        tabId: tab.id
      }, function(mhtml) {
        var filename;
        filename = (msg.filename || tab.title).replace(/(.mhtml)?$/, '.mhtml');
        saveAs(mhtml, filename);
        return Post(tab, {
          action: "Window.saveas",
          data: mhtml,
          filename: filename
        });
      });
    };

    Window.moveTabToWindowWithIncognito = function(tab, incognito, callback) {
      return chrome.windows.getAll({
        populate: true
      }, function(windows) {
        var window, _i, _len;
        for (_i = 0, _len = windows.length; _i < _len; _i++) {
          window = windows[_i];
          if ((window.type === "normal") && (window.incognito === incognito) && (window.id !== tab.windowId)) {
            chrome.tabs.create({
              windowId: window.id,
              url: tab.url
            });
            if (callback) {
              callback(tab);
            }
            return true;
          }
        }
        chrome.windows.create({
          url: tab.url,
          incognito: incognito
        });
        if (callback) {
          return callback(tab);
        }
      });
    };

    return Window;

  })();

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.Window = Window;

}).call(this);
